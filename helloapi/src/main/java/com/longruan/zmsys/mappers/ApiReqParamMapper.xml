<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.longruan.zmsys.dao.ApiReqParamMapper">
  <resultMap id="BaseResultMap" type="com.longruan.zmsys.models.ApiReqParam">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="req_url_id" jdbcType="INTEGER" property="reqUrlId" />
    <result column="req_field" jdbcType="VARCHAR" property="reqField" />
    <result column="req_type" jdbcType="VARCHAR" property="reqType" />
    <result column="req_des" jdbcType="VARCHAR" property="reqDes" />
    <result column="req_required" jdbcType="VARCHAR" property="reqRequired" />
    <result column="req_def_val" jdbcType="VARCHAR" property="reqDefVal" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    id, req_url_id, req_field, req_type, req_des, req_required, req_def_val, remark
  </sql>
  <select id="selectByExample" parameterType="com.longruan.zmsys.models.ApiReqParamExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_req_param
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    select 
    <include refid="Base_Column_List" />
    from api_req_param
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    delete from api_req_param
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.longruan.zmsys.models.ApiReqParamExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    delete from api_req_param
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.longruan.zmsys.models.ApiReqParam">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    insert into api_req_param (id, req_url_id, req_field, 
      req_type, req_des, req_required, 
      req_def_val, remark)
    values (#{id,jdbcType=INTEGER}, #{reqUrlId,jdbcType=INTEGER}, #{reqField,jdbcType=VARCHAR}, 
      #{reqType,jdbcType=VARCHAR}, #{reqDes,jdbcType=VARCHAR}, #{reqRequired,jdbcType=VARCHAR}, 
      #{reqDefVal,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.longruan.zmsys.models.ApiReqParam">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    insert into api_req_param
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="reqUrlId != null">
        req_url_id,
      </if>
      <if test="reqField != null">
        req_field,
      </if>
      <if test="reqType != null">
        req_type,
      </if>
      <if test="reqDes != null">
        req_des,
      </if>
      <if test="reqRequired != null">
        req_required,
      </if>
      <if test="reqDefVal != null">
        req_def_val,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="reqUrlId != null">
        #{reqUrlId,jdbcType=INTEGER},
      </if>
      <if test="reqField != null">
        #{reqField,jdbcType=VARCHAR},
      </if>
      <if test="reqType != null">
        #{reqType,jdbcType=VARCHAR},
      </if>
      <if test="reqDes != null">
        #{reqDes,jdbcType=VARCHAR},
      </if>
      <if test="reqRequired != null">
        #{reqRequired,jdbcType=VARCHAR},
      </if>
      <if test="reqDefVal != null">
        #{reqDefVal,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.longruan.zmsys.models.ApiReqParamExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    select count(*) from api_req_param
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    update api_req_param
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.reqUrlId != null">
        req_url_id = #{record.reqUrlId,jdbcType=INTEGER},
      </if>
      <if test="record.reqField != null">
        req_field = #{record.reqField,jdbcType=VARCHAR},
      </if>
      <if test="record.reqType != null">
        req_type = #{record.reqType,jdbcType=VARCHAR},
      </if>
      <if test="record.reqDes != null">
        req_des = #{record.reqDes,jdbcType=VARCHAR},
      </if>
      <if test="record.reqRequired != null">
        req_required = #{record.reqRequired,jdbcType=VARCHAR},
      </if>
      <if test="record.reqDefVal != null">
        req_def_val = #{record.reqDefVal,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    update api_req_param
    set id = #{record.id,jdbcType=INTEGER},
      req_url_id = #{record.reqUrlId,jdbcType=INTEGER},
      req_field = #{record.reqField,jdbcType=VARCHAR},
      req_type = #{record.reqType,jdbcType=VARCHAR},
      req_des = #{record.reqDes,jdbcType=VARCHAR},
      req_required = #{record.reqRequired,jdbcType=VARCHAR},
      req_def_val = #{record.reqDefVal,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.longruan.zmsys.models.ApiReqParam">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    update api_req_param
    <set>
      <if test="reqUrlId != null">
        req_url_id = #{reqUrlId,jdbcType=INTEGER},
      </if>
      <if test="reqField != null">
        req_field = #{reqField,jdbcType=VARCHAR},
      </if>
      <if test="reqType != null">
        req_type = #{reqType,jdbcType=VARCHAR},
      </if>
      <if test="reqDes != null">
        req_des = #{reqDes,jdbcType=VARCHAR},
      </if>
      <if test="reqRequired != null">
        req_required = #{reqRequired,jdbcType=VARCHAR},
      </if>
      <if test="reqDefVal != null">
        req_def_val = #{reqDefVal,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.longruan.zmsys.models.ApiReqParam">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 01 08:56:08 CST 2017.
    -->
    update api_req_param
    set req_url_id = #{reqUrlId,jdbcType=INTEGER},
      req_field = #{reqField,jdbcType=VARCHAR},
      req_type = #{reqType,jdbcType=VARCHAR},
      req_des = #{reqDes,jdbcType=VARCHAR},
      req_required = #{reqRequired,jdbcType=VARCHAR},
      req_def_val = #{reqDefVal,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>